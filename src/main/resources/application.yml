server:
  port: 8123
  servlet:
    context-path: /api
    # cookie expires in 30 days
    session:
      cookie:
        max-age: 2592000
spring:
  application:
    name: PixHive_backend
  # database config
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/PixHive
    username: xxx
    password: xxx
  # Redis config
  redis:
    database: 0
    host: 127.0.0.1
    port: 6379
    timeout: 5000
  # Session config
  session:
    store-type: redis
    # expires in 30 days
    timeout: 2592000
  # Expand the file upload volume (default 1M)
  servlet:
    multipart:
      max-file-size: 10MB
  # sharding
  shardingsphere:
    datasource:
      names: pixhive
      PixHive:
        type: com.zaxxer.hikari.HikariDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://localhost:3306/PixHive
        username: xxx
        password: xxx
    rules:
      sharding:
        tables:
          picture:
            actual-data-nodes: pixhive.picture
            table-strategy:
              standard:
                sharding-column: spaceId
                sharding-algorithm-name: picture_sharding_algorithm  # Custom sharding algorithm
        sharding-algorithms:
          picture_sharding_algorithm:
            type: CLASS_BASED
            props:
              strategy: standard
              algorithmClassName: com.jin.pixhive.shared.sharding.PictureShardingAlgorithm
    props:
      sql-show: true
  profiles:
    active: local
mybatis-plus:
  configuration:
    map-underscore-to-camel-case: false
    # print log in development environment
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
  global-config:
    enable-sql-runner: true
    db-config:
      logic-delete-field: isDelete
      logic-delete-value: 1
      logic-not-delete-value: 0

# Interface document config
knife4j:
  enable: true
  openapi:
    title: Interface Document
    version: 1.0
    group:
      default:
        api-rule: package
        api-rule-resources:
          - com.jin.pixhive.interfaces.controller
# COS config（from Tencent Cloud）
cos:
  client:
    host:
    secretId:
    secretKey:
    region:
    bucket:

# aliYun AI config
aliYunAi:
  apiKey: xxxx
